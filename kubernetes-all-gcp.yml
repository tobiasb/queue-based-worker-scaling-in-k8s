apiVersion: v1
kind: ConfigMap
metadata:
  name: poc-configmap
data:
  rabbitmq_amqp_url: 'rabbitmq-service'
  jobapi_host: 'http://jobapi-service'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
spec:
  selector:
    matchLabels:
      app: rabbitmq
  replicas: 1
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      nodeSelector:
        cloud.google.com/gke-nodepool: default-pool
      containers:
      - name: rabbitmq
        image: 'rabbitmq:3.8-management-alpine'
        ports:
        - containerPort: 5672
        resources:
          requests:
            cpu: 50m
            memory: 32Mi
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-service
  labels:
    app: rabbitmq-service
spec:
  ports:
  - port: 5672
    protocol: TCP
  selector:
    app: rabbitmq
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jobapi
spec:
  selector:
    matchLabels:
      app: jobapi
  replicas: 1
  template:
    metadata:
      labels:
        app: jobapi
    spec:
      nodeSelector:
        cloud.google.com/gke-nodepool: default-pool
      containers:
      - name: jobapi
        image: 'eu.gcr.io/tobiasb-test-project/tobiasb/job-api@sha256:ac03b107dee4d68a6137c0ec13bb37d5f4856c01dcb733557da1966b27606310'
        imagePullPolicy: IfNotPresent
        env:
        - name: AMQP_URL
          valueFrom:
            configMapKeyRef:
              name: poc-configmap
              key: rabbitmq_amqp_url
        ports:
        - protocol: TCP
          containerPort: 8080
          name: http
        resources:
          requests:
            cpu: 50m
            memory: 32Mi
---
apiVersion: v1
kind: Service
metadata:
  name: jobapi-service
  labels:
    app: jobapi-service
spec:
  ports:
  - name: jobapi-http
    port: 80
    targetPort: 8080
    protocol: TCP
  selector:
    app: jobapi
  type: NodePort
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: jobapi-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - http:
      paths:
      - path: /jobapi(/|$)(.*)
        backend:
          serviceName: jobapi-service
          servicePort: jobapi-http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker
  labels:
    app: worker
spec:
  selector:
    matchLabels:
      app: worker
  replicas: 1
  template:
    metadata:
      labels:
        app: worker
    spec:
      nodeSelector:
        cloud.google.com/gke-nodepool: worker-pool
      containers:
      - name: worker
        image: 'eu.gcr.io/tobiasb-test-project/tobiasb/worker@sha256:dcdae5437f8e86ab3f674cfe1d2b4a5ef296d236d6887cbe76885f13a97e733d'
        imagePullPolicy: IfNotPresent
        env:
        - name: AMQP_URL
          valueFrom:
            configMapKeyRef:
              name: poc-configmap
              key: rabbitmq_amqp_url
        - name: JOB_API_HOST
          valueFrom:
            configMapKeyRef:
              name: poc-configmap
              key: jobapi_host
        resources:
          requests:
            cpu: 600m
            memory: 32Mi
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: deployments-list
rules:
- apiGroups: ['', 'extensions', 'apps']
  resources: ['deployments']
  verbs: ['get', 'list', 'update', 'edit', 'patch']
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: deployments-list
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
roleRef:
  kind: ClusterRole
  name: deployments-list
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: autoscaler
spec:
  selector:
    matchLabels:
      app: autoscaler
  replicas: 1
  template:
    metadata:
      labels:
        app: autoscaler
    spec:
      nodeSelector:
        cloud.google.com/gke-nodepool: default-pool
      containers:
      - name: autoscaler
        image: 'eu.gcr.io/tobiasb-test-project/tobiasb/autoscaler@sha256:dade8a25a0b797eef77413d573d97c7ca4f3cfd376ea2407b134b5c2b9dfc8c5'
        imagePullPolicy: IfNotPresent
        env:
        - name: AMQP_URL
          valueFrom:
            configMapKeyRef:
              name: poc-configmap
              key: rabbitmq_amqp_url
        - name: JOB_API_HOST
          valueFrom:
            configMapKeyRef:
              name: poc-configmap
              key: jobapi_host
        - name: SCALE_OUT_COOLDOWN_SECONDS
          value: '0'
        - name: SCALE_IN_COOLDOWN_SECONDS
          value: '30'
        - name: MAX_REPLICAS
          value: '4'
        - name: K8S_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 50m
            memory: 32Mi
